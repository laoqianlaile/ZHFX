# Properties file with JDBC and JPA settings.
# Connection Info
# 数据库驱动
#jdbc.driverClassName=com.gbase.jdbc.Driver
jdbc.driverClassName=dm.jdbc.driver.DmDriver
# 数据库连接url
#jdbc.url=jdbc:dm://59.255.137.11:5236/MPMS
jdbc.url=jdbc:dm://10.10.10.11:5237/KPPWQY2
#jdbc.url=jdbc:gbase://59.255.137.11:5236/kppw?profileSql=false&useOldAliasMetadataBehavior=true
#jdbc.url=jdbc:dm://localhost:5236/ZHFX
#jdbc.url=jdbc:dm://192.168.2.98:5236/CHAKAN
# 数据库用户名
#jdbc.username=MPMS
#jdbc.username=gbase

jdbc.username=KPPWQY2
# 数据库密码
#jdbc.password=MPMS_strong
#jdbc.password=gbase20110531
#jdbc.password=password1

jdbc.password=PASSWORD123
# Connection Pooling Info
# 初始化时获取的连接数量，取值应在minPoolSize与maxPoolSize之间
jdbc.initialPoolSize=30
# 连接池中保留的最小连接数
jdbc.minPoolSize=10
# 连接池中保留的最大连接数
jdbc.maxPoolSize=100
# 最大空闲时间,多少秒内未使用则连接被丢弃，若为0则永不丢弃。
jdbc.maxIdleTime=600
# JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。
jdbc.maxStatements=0
# 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数
jdbc.acquireIncrement=5
# 定义在从数据库获取新连接失败后重复尝试的次数
jdbc.acquireRetryAttempts=30
# 两次连接中间隔时间，单位：毫秒。
jdbc.acquireRetryDelay=1000
# 隔多少秒检查所有连接池中的空闲连接，默认为0表示不检查
jdbc.idleConnectionTestPeriod=600
# 连接关闭时默认将所有未提交的操作回滚。默认为false
jdbc.autoCommitOnClose=false
# 获取连接失败将会引起所有等待获取连接的线程抛出异常
jdbc.breakAfterAcquireFailure=false

# hibernate settings
# hibernate方言 
#hibernate.dialect=com.strongit.iss.hibernate.dialect.ISSDmDialect
hibernate.dialect=org.hibernate.dialect.GBaseDialect
# 是否显示最终执行的SQL
hibernate.show_sql=true
# 格式化显示SQL
hibernate.format_sql=false
# 在SQL中生成有助于调试的注释信息
hibernate.use_sql_comments=false
# 设定JDBC的Statement读取数据时每次从数据库中取出的记录条数
hibernate.jdbc.fetch_size=100
# 设定对数据库进行批量删除、更新和插入时的批次大小
hibernate.jdbc.batch_size=30
# 统计策略
hibernate.generate_statistics=true
# 自定义的CacheProvider的类名
hibernate.cache.provider_class=org.hibernate.cache.HashtableCacheProvider
# 设置JDBC事务隔离级别
# 1：读操作未提交（Read Uncommitted）
# 2：读操作已提交（Read Committed）
# 4：可重读（Repeatable Read）
# 8：可串行化（Serializable）
hibernate.connection.isolation=4
# 允许被缓存的JDBC连接开启自动提交
hibernate.connection.autocommit=false
# 自动重新连接
hibernate.autoReconnect=true
#=============================================== 系统定时任务配置 开始 ===================================================
#cron表达式说明：一个cron表达式有至少6个（也可能7个）有空格分隔的时间元素， 按顺序每一个域可出现的字符如下： 
#1. 秒：           可出现【, - * /】四个字符，有效范围为0-59的整数。
#2. 分钟：       可出现【, - * /】四个字符，有效范围为0-59的整数。
#3. 小时：       可出现【, - * /】四个字符，有效范围为0-23的整数。
#4. 天/月：    可出现【, - * / ? L W C】八个字符，有效范围为0-31的整数。
#5. 月份：       可出现【, - * /】四个字符，有效范围为1-12的整数或JAN-DEC。
#6. 天/星期：可出现【, - * / ? L C #】八个字符，有效范围为1-7的整数或SUN-SAT两个范围。1表示星期天，2表示星期一， 依次类推。
#7. 年份：       可出现【, - * /】四个字符，有效范围为1970-2099的整数。
#每一个域都使用数字，但还可以出现如下特殊字符，它们的含义是： 
#1. *  表示匹配该域的任意值，假如在 分钟 域使用*, 即表示每分钟都会触发事件。
#2. ?  只能用在 天/月 和 天/星期 两个域。它也匹配域的任意值，但实际不会。因为 天/月 和 天/星期 会相互影响。
#3. -  表示范围，例如在 分钟 域使用5-20，表示从5分到20分钟每分钟触发一次。
#4. /  表示起始时间开始触发，然后每隔固定时间触发一次，例如在 分钟 域使用5/20，则意味着5分钟触发一次，而25，45等分别触发一次。
#5. ,  表示列出枚举值。例如：在 分钟 域使用5,20，则意味着在5和20分每分钟触发一次。
#6. L  表示最后，只能出现在 天/星期 和 天/月 域，如果在 天/星期 域使用5L，意味着在最后的一个星期四触发。 
#7. W  表示有效工作日(周一到周五)，只能出现在  天/月 域，系统将在离指定日期的最近的有效工作日触发事件，但是W的最近寻找不会跨过月份。
#8. LW 这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。
#9. #  用于确定每个月第几个星期几，只能出现在 天/月 域。例如在4#2，表示某月的第二个星期三。

#调度任务自动下发配置：每月1号0点调度一次
project.report.check.cron=0 0 5 * * ?
#调度任务结束时间到期自动完成配置：每天凌晨2点执行扫描一次
#project.dispatch.complete.cron=0 0 2 * * ?
#调度任务自动生成待办配置：每天凌晨2点执行扫描一次
#project.dispatch.checkRecord.cron=0 0 2 * * ?
#调度排名自动计算分解率和填报率
#project.dispatch.dispatchRankAutoCalculateRate.cron=0 0 2 * * ?

#系统运行日报任务自动下发配置：每天下午7点调度一次   0 0 19 1/1 * ?
#project.report.check.cron=0 0 15 1/1 * ? 

